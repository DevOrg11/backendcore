# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  AZURE_WEBAPP_NAME: backendcore    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x'           # set this to the dot net version to use

jobs:
  buildAndPublish:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 

    - name: Build and Publish
      run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 
      working-directory: './src'
      
    - name: Test
      run: dotnet test --no-restore --verbosity normal --logger "trx;logfilename=testResults.trx" || true
      working-directory: './src'
    
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: DotNet Tests
        path: "**/testResults.trx"
        reporter: dotnet-trx
        fail-on-error: true

    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/myapp/appsettings.json'
      env:
        ConnectionStrings.DefaultConnection: ${{ secrets.AZURE_DB_CONNECTIONSTRING }}

    - name: 'Run Azure webapp deploy action using publish profile credentials'
      if: contains( github.ref, 'Main')
      uses: azure/webapps-deploy@v2
      with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/src/myapp'
